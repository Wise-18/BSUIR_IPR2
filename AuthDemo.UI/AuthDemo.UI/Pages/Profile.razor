@page "/profile"
@using AuthDemo.UI.Services
@using AuthDemo.UI.Models
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<PageTitle>Profile</PageTitle>

<div class="container">
    @if (profile == null)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body text-center">
                        @if (!string.IsNullOrEmpty(profile.AvatarUrl))
                        {
                            <img src="@profile.AvatarUrl"
                                 class="rounded-circle img-fluid mb-3"
                                 alt="User avatar"
                                 style="max-width: 200px"
                                 onerror="this.src='images/default-avatar.png';" />
                        }
                        else
                        {
                            <img src="images/default-avatar.png"
                                 class="rounded-circle img-fluid mb-3"
                                 alt="Default avatar"
                                 style="max-width: 200px" />
                        }
                        <h4>@profile.Username</h4>
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3 class="mb-0">Profile Information</h3>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-3">Username</dt>
                            <dd class="col-sm-9">@profile.Username</dd>

                            <dt class="col-sm-3">Email</dt>
                            <dd class="col-sm-9">@profile.Email</dd>

                            <dt class="col-sm-3">First Name</dt>
                            <dd class="col-sm-9">@profile.FirstName</dd>

                            <dt class="col-sm-3">Last Name</dt>
                            <dd class="col-sm-9">@profile.LastName</dd>
                        </dl>

                        <div class="mt-4">
                            <button class="btn btn-primary" @onclick="HandleEdit">
                                Edit Profile
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        @if (isEditing)
        {
            <div class="modal" tabindex="-1" style="display: block; background-color: rgba(0,0,0,0.5);">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Edit Profile</h5>
                            <button type="button" class="btn-close" @onclick="HandleCancel"></button>
                        </div>
                        <div class="modal-body">
                            <EditForm Model="@editModel" OnValidSubmit="HandleSave">
                                <DataAnnotationsValidator />

                                <div class="mb-3">
                                    <label class="form-label">Email</label>
                                    <InputText @bind-Value="editModel.Email" class="form-control" />
                                    <ValidationMessage For="@(() => editModel.Email)" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">First Name</label>
                                    <InputText @bind-Value="editModel.FirstName" class="form-control" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Last Name</label>
                                    <InputText @bind-Value="editModel.LastName" class="form-control" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">New Avatar</label>
                                    <InputFile OnChange="OnFileChange" class="form-control" accept=".jpg,.jpeg,.png" />
                                </div>

                                @if (!string.IsNullOrEmpty(error))
                                {
                                    <div class="alert alert-danger">@error</div>
                                }

                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" @onclick="HandleCancel">Cancel</button>
                                    <button type="submit" class="btn btn-primary" disabled="@isSaving">
                                        @if (isSaving)
                                        {
                                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                            <span class="ms-1">Saving...</span>
                                        }
                                        else
                                        {
                                            <span>Save Changes</span>
                                        }
                                    </button>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    private UserProfile? profile;
    private bool isEditing;
    private bool isSaving;
    private string? error;
    private RegisterModel editModel = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadProfile();
    }

    private async Task LoadProfile()
    {
        profile = await AuthService.GetUserProfileAsync();
        if (profile != null)
        {
            editModel = new RegisterModel
                {
                    Username = profile.Username,
                    Email = profile.Email ?? string.Empty,
                    FirstName = profile.FirstName ?? string.Empty,
                    LastName = profile.LastName ?? string.Empty
                };
        }
    }

    private void HandleEdit()
    {
        isEditing = true;
    }

    private void HandleCancel()
    {
        isEditing = false;
        error = null;
    }

    private async Task OnFileChange(InputFileChangeEventArgs e)
    {
        try
        {
            var file = e.File;
            if (file != null)
            {
                editModel.Avatar = file;
            }
        }
        catch (Exception ex)
        {
            error = "Error loading image. Please try a different file.";
        }
    }

    private async Task HandleSave()
    {
        try
        {
            isSaving = true;
            error = null;

            var result = await AuthService.UpdateProfileAsync(editModel);
            if (result)
            {
                await LoadProfile();
                isEditing = false;
            }
            else
            {
                error = "Failed to update profile. Please try again.";
            }
        }
        catch (Exception ex)
        {
            error = "An error occurred while saving changes.";
        }
        finally
        {
            isSaving = false;
        }
    }
}