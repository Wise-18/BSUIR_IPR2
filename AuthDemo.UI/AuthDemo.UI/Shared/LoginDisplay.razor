<AuthorizeView>
    <Authorized>
        <div class="user-info">
            @if (!string.IsNullOrEmpty(context.User.FindFirst("avatar_url")?.Value))
            {
                <img src="@context.User.FindFirst("avatar_url")?.Value"
                     class="avatar-small"
                     alt="User avatar"
                     onerror="this.src='images/default-avatar.png';" />
            }
            <span class="username">@context.User.Identity?.Name</span>
            <button class="btn btn-link" @onclick="HandleLogout">Logout</button>
        </div>
    </Authorized>
    <NotAuthorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="authentication/register">
                <span class="oi oi-person" aria-hidden="true"></span> Register
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="authentication/login">
                <span class="oi oi-account-login" aria-hidden="true"></span> Login
            </NavLink>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    [Inject]
    private IAuthService AuthService { get; set; } = default!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    private async Task HandleLogout()
    {
        await AuthService.LogoutAsync();
        NavigationManager.NavigateTo("/");
    }
}